
流

Stream自己不会存储元素
Stream不会改变源对象，他们会生成一个新的Stream
流的工作原理，第一，要先有个数据源，数据就像在一个管道内，按照顺序对数据做处理，在执行下一个处理，完成之后
终止流，得到你想要的结果

Stream的 中间操作

 1.筛选和切片

    1.1 Filter(Predicate<? super T> predicate)
        Filter接收的是断言行接口，使用Lambda写法，对数据做判断，过滤条件
    1.2 Distinct()
        去重，去重是对每个对象做去重，相同的对象会过滤掉,只留下一个对象。
    1.3 Limit(Integer number)
        去集合的前几个元素
    1.4 Skip(Integer number)
        跳过多少个元素

 2.映射
    2.1
        map<Function<? super T, ? extends R> mapper>
        Function方法，接收一个参数，并对参数做处理，返回数据;

    3.排序
        sorted() - 自然排序，没有规则就是按照字典排序
        Sorted() - 定制排序，传入参数，比较排序

Stream的 终止操作

 1.查找和匹配

 2.规约

 3.收集
    3.1 转成集合（list/set/Map)
         collect(Collectors.toSet()); /Collectors.toList()  /Collectors.toMap()
    3.2 分组 根据某个值分组
        collect(Collectors.groupingBy(Employee::getStatus))




